Username Enumeration:
	UserController.groovy: The signup() action should return only a single "invalid registration" message, and not give more information based on whether or not the user email exists
    UserController.groovy: The signup() action should not return a message if your account is locked, because then 3 tries on a username will reveal if it is real or not
Weak Complexity
	UserController.groovy: Password length is checked, but 1. there should be no max password length and 2. it should validate a minimum level of complexity with the provided regex (commented out)
Templating XSS
	main/index.gsp: If the description needs formatting, use Markdown or something instead of just arbitrary HTML
Admin Console
	/dbconsole/: Accessible and unprotected database console. Grails doesn't neccesarily make it clear this exists!
SQL/HQL injection:
	ProfileController.groovy: The index of the profile uses raw HQL rather than User.get(id)
	UserController.groovy: Signing in "saves time" by checking username and password in one HQL query, but opens itself up to SQL injection
Insecure Direct Object Access
	ProfileController.groovy: The index of the profile pulls the ID from the URL, not the session
Lack of Account Lockout:
    UserController.groovy: An account lockout is present, but implemented using sessions by default. A user can just delete his or her session cookie to avoid being locked out
    (A more secure version of the lockout, one which uses the database, is present but commented out in the source code.)
Session Timeout
    src/templates/war/web.xml: Sessions were set to not expire, because session expiration is annoying right?
CSRF
    CSRF protection is only present on the signup/signin dialogs. Every other form on the site (messaging/edit profile/upload resume/forgot password/etc) is not protected
Session Fixation
	UserController.groovy/SessionFilters.groovy: By default, the session ID does not change after a login. However, commented out code in the UserController and the SessionFilters allow for the session to be invalidated and a new session ID assigned after a login. (Session IDs are by default changed on logout.)
Information Disclosure
	ProfileController.groovy: Caching headers (as seen in MessagesController.groovy) are not set, so the application may cache the page and cause attackers to be able to view user SSN information in the browser cache
XSS - JS Context
	MainController.groovy: In order to create the links on the main listings page, we use a funky array that allows for XSS in a JS context
XSS - DOM Based
	loggedin.gsp: The dummy language switcher pulls straight from the fragment of the URL, allowing for XSS on its contents
Auth Filters Blacklist
	SessionFilters.groovy: The session filters present in this file protect all pages, but use a blacklist not a whitelist and are missing the individual listings page
Validators
	UserController.groovy: On signup/registration, a weak email regex is used, which allows users to sign up multiple times by appending a string to their emails (ex: dave@test.com and dave+evil@test.com)
	ProfileController.groovy: Updating the profile again uses the same weak email regex as above.
Insecure Redirect
	SessionFilters.groovy: Uses a redirect when you are sent to the login. Convenient, but it is an unsecured redirect
	UserController.groovy: Contains a redirect, but does not validate that the user is sent to a site on the same domain
Logic Flaw
	UserController.groovy: Users who have the string "findmeajob.com" in their e-mail are automatically promoted to admin.